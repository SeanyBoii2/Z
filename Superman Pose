local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Custom idle animation
local idleAnim = Instance.new("Animation")
idleAnim.AnimationId = "rbxassetid://17058233524"
local idleTrack = humanoid:LoadAnimation(idleAnim)
idleTrack.Looped = true

local UserInputService = game:GetService("UserInputService")
local idleEnabled = false -- starts OFF

-- Helper to stop all tracks instantly
local function stopAllAnimations()
    for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
        track:Stop(0) -- instantly stop, no fade
    end
end

-- Toggle with J
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.C then
        idleEnabled = not idleEnabled

        if idleEnabled then
            stopAllAnimations() -- clear everything before playing ours
            idleTrack:Play()
        else
            idleTrack:Stop(0) -- force stop immediately
            stopAllAnimations() -- double ensure no leftovers
        end
    end
end)

-- Keep idle looping if enabled
game:GetService("RunService").Heartbeat:Connect(function()
    if idleEnabled and not idleTrack.IsPlaying then
        idleTrack:Play()
    end
end)

-- Reset on respawn
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")

    idleTrack = humanoid:LoadAnimation(idleAnim)
    idleTrack.Looped = true
end)
