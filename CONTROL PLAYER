-- StarterPlayerScripts/ChatControl.lua
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local LocalPlayer = Players.LocalPlayer

-- change this to the "owner" display name you want to listen to
local ownerDisplayName = "Superman"

-- helper: get my Humanoid + HumanoidRootPart
local function getSelf()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return char, char:FindFirstChild("Humanoid"), char:FindFirstChild("HumanoidRootPart")
end

-- actions
local function teleportToOwner(owner)
    local _, _, myHRP = getSelf()
    local oChar = owner.Character
    local oHRP = oChar and oChar:FindFirstChild("HumanoidRootPart")
    if myHRP and oHRP then
        myHRP.CFrame = oHRP.CFrame + Vector3.new(0, 3, 0)
    end
end

local function resetSelf()
    local _, humanoid = getSelf()
    if humanoid then
        humanoid.Health = 0
    end
end

local function anchorSelf(toggle)
    local _, _, myHRP = getSelf()
    if myHRP then
        myHRP.Anchored = toggle
    end
end

-- handle a chat message from the "owner"
local function handleMessage(fromPlayer, msg)
    if fromPlayer.DisplayName ~= ownerDisplayName then return end

    msg = msg:lower()
    if msg == "teleport" then
        teleportToOwner(fromPlayer)
    elseif msg == "reset" then
        resetSelf()
    elseif msg == "anchor" then
        anchorSelf(true)
    elseif msg == "unanchor" then
        anchorSelf(false)
    end
end

-- support new TextChatService
if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
    TextChatService.MessageReceived:Connect(function(message)
        local sender = message.TextSource and Players:GetPlayerByUserId(message.TextSource.UserId)
        if sender then
            handleMessage(sender, message.Text)
        end
    end)
else
    -- fallback for legacy chat
    local function setupLegacy(plr)
        plr.Chatted:Connect(function(msg)
            handleMessage(plr, msg)
        end)
    end

    for _, plr in ipairs(Players:GetPlayers()) do
        setupLegacy(plr)
    end
    Players.PlayerAdded:Connect(setupLegacy)
end
